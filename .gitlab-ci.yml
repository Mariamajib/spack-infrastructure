variables:
  SPACK_REPO: https://github.com/spack/spack.git
stages:
  - sync_gitlab
  - check
  - generate
  - build
  - approve
  - deploy

perlmutter:check_spack_dependencies:
  stage: check
  tags: [perlmutter-e4s]
  script:
    - bash check_spack_dependencies.sh

muller:check_spack_dependencies:
  stage: check
  tags: [muller-e4s]
  script:
    - bash check_spack_dependencies.sh

.copy_perlmutter_settings: &copy_perlmutter_settings
  - mkdir -p /global/common/software/spackecp/perlmutter/spack_settings
  - cp settings/* /global/common/software/spackecp/perlmutter/spack_settings/

.startup_modules: &startup_modules
  - module reset
  - module use /global/common/software/nersc/$(cat /etc/nersc_modules_rev)/extra_modulefiles
  - module load cpu
  - module list

.e4s_22_05_build: &e4s_22_05_build
  - set +e
  - source setup-env.sh
  # need to pre-create this directory apparently spack ci doesn't create this automatically
  - mkdir -p /global/common/software/spackecp/mirrors/perlmutter-e4s-22.05/build_cache/_pgp
  - rm -rf $SPACK_CLONE_PATH
  - mkdir -p $SPACK_CLONE_PATH
  - git clone --depth=10 -b e4s-22.05 $SPACK_REPO $SPACK_CLONE_PATH/spack
  - . $SPACK_CLONE_PATH/spack/share/spack/setup-env.sh
  - spack --version
  - spack-python --path
  - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/ci
  - spack env activate --without-view .
  - spack mirror create -d /global/common/software/spackecp/mirrors/source_mirror --all
  - export SPACK_GNUPGHOME=$HOME/.gnupg
  - spack ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  #- srun -A m3503_g -C gpu -q regular -G 4 -t 12:00:00 -N 4 -n 128 spack install -y --show-log-on-error
  #- srun -A m3503_g -C gpu --reservation=spack_e4s -q regular -G 2 -t 24:00:00 -N 2 -n 64 spack install -y --show-log-on-error
  #- spack find
  #- spack env view regenerate

.e4s_21_11_build: &e4s_21_11_build
  - set +e
  - source setup-env.sh
  - git clone -b e4s-21.11 $SPACK_REPO
  - cd spack
  - git config user.name "e4s"
  - git config user.email "e4s@nersc.gov"
  # Add NVHPC 21.11 PR: https://github.com/spack/spack/pull/27910
  - git cherry-pick 5d6a9a7
  - . share/spack/setup-env.sh
  - spack-python --path
  - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-21.11/ci
  - spack env activate -d .
  - spack mirror create -d /global/common/software/spackecp/mirrors/source_mirror --all
  - srun -A m3503_g -C gpu --reservation=spack_e4s -q regular -G 2 -t 12:00:00 -N 2 -n 64 spack install -y --show-log-on-error
  - spack find

spack_training_check:
  stage: build
  tags: [perlmutter-e4s]
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "SPACK_TRAINING")
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - docs/spack_training.rst
  script:
    - cd $CI_PROJECT_DIR
    - source setup-env.sh
    - git clone -b e4s-22.05 https://github.com/spack/spack.git
    - source spack/share/spack/setup-env.sh
    - spack --version
    - echo $SPACK_PYTHON
    - spack-python --path
    - spack env create data_viz $CI_PROJECT_DIR/docs/spack.yaml
    - spack env activate data_viz
    - spack env st
    - spack compiler list
    - spack providers
    - spack providers mpi
    - spack concretize
    - set +e
    - spack install
    - set -e
    - spack find
    - spack mirror create -d $CI_PROJECT_DIR/spack_mirror -a
    - ls -l $CI_PROJECT_DIR/spack_mirror/*
    - spack -d module tcl refresh --delete-tree -y
    - ls -l $HOME/spack-infrastructure/modules/$(spack arch)/*
    - module use $HOME/spack-infrastructure/modules/$(spack arch)
    - ml av

sync_gitlab_runner:
  stage: sync_gitlab
  tags: [shell]
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - restart-gitlab.sh
  script:
    - cp $CI_PROJECT_DIR/restart-gitlab.sh ~/cron/restart-gitlab.sh

gerty-e4s-22.02:
  stage: build
  tags: [gerty-e4s]
  interruptible: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "GERTY_E4S_22.02")
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - spack-configs/cori-e4s-22.02/ci/gerty/spack.yaml
      allow_failure: true
  script:
    - source setup-env.sh
    - git clone $SPACK_REPO --branch e4s-22.02
    - . spack/share/spack/setup-env.sh
    - spack-python --path
    - spack env activate -d $CI_PROJECT_DIR/spack-configs/cori-e4s-22.02/ci/gerty
    - spack mirror create -d /global/common/software/spackecp/mirrors/source_mirror --all
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log
    - set +e
    # issue with write-lock sometimes
    #- srun -t 24:00:00 -q regular -C haswell -N 1 spack install -j 16 -y --show-log-on-error 2>&1
    - spack install -j 16 -y --show-log-on-error 2>&1
    - spack find
    - spack module tcl refresh --delete-tree -y
    - ls -l $SPACK_ROOT/opt/modules/tcl/$(spack arch)
    # - bash update_buildcache.sh $e4s_mirror
    - spack buildcache list -Lv
  artifacts:
    paths: [$CI_PROJECT_DIR/concretize.log]

cori-e4s-22.02:
  stage: build
  tags: [cori-e4s]
  interruptible: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "CORI_E4S_22.02")
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - spack-configs/cori-e4s-22.02/ci/cori/spack.yaml
      allow_failure: true
  script:
    - source setup-env.sh
    - git clone $SPACK_REPO --branch e4s-22.02
    - . spack/share/spack/setup-env.sh
    - spack-python --path
    - spack env activate -d $CI_PROJECT_DIR/spack-configs/cori-e4s-22.02/ci/
    - spack mirror create -d /global/common/software/spackecp/mirrors/source_mirror --all
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log
    - spack gpg list
    - set +e
    - spack install -y --show-log-on-error 2>&1
    - spack find
    - spack module tcl refresh --delete-tree -y
    - module use $SPACK_ROOT/opt/modules/tcl/$(spack arch)
    - module av
    - spack buildcache list -Lv
  artifacts:
    paths: [$CI_PROJECT_DIR/concretize.log]

perlmutter-spack-develop-ci-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  variables:
    SPACK_CLONE_PATH: "/global/cfs/cdirs/m3503/workdir/perlmutter-spack-develop"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_SPACK_DEVELOP")
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - spack-configs/perlmutter-spack-develop/spack.yaml
      allow_failure: true
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - export PERLMUTTER_SPACK_BUILDCACHE=/global/common/software/spackecp/mirrors/perlmutter-spack-develop/
    - source setup-env.sh
    - rm -rf $SPACK_CLONE_PATH
    - mkdir -p $SPACK_CLONE_PATH
    - git clone --depth=10 $SPACK_REPO $SPACK_CLONE_PATH/spack
    - . $SPACK_CLONE_PATH/spack/share/spack/setup-env.sh
    - export SPACK_GNUPGHOME=$HOME/.gnupg
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-spack-develop
    - spack env activate --without-view .
    - spack ci generate --check-index-only --buildcache-destination "${PERLMUTTER_SPACK_BUILDCACHE}" --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-spack-develop-ci-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-spack-develop-ci-generate"]
  variables:
    SPACK_CLONE_PATH: "/global/cfs/cdirs/m3503/workdir/perlmutter-spack-develop"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_SPACK_DEVELOP")
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - spack-configs/perlmutter-spack-develop/spack.yaml
      allow_failure: true
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-spack-develop-ci-generate
    strategy: depend

perlmutter-e4s-22.05-ci-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  variables:
    SPACK_CLONE_PATH: "/global/cfs/cdirs/m3503/workdir/perlmutter-e4s-22.05"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.05")
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - spack-configs/perlmutter-e4s-22.05/ci/spack.yaml
      allow_failure: true
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_22_05_build
    #- echo "SHARED_SPACK_INSTANCE=$SPACK_ROOT" >> build.env
    #- cat build.env

  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-e4s-22.05-ci-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.05-ci-generate"]
  variables:
    SPACK_CLONE_PATH: "/global/cfs/cdirs/m3503/workdir/perlmutter-e4s-22.05"
  #needs:
  #  - job: "perlmutter:check_spack_dependencies"
  #    artifacts: false
  #  - job: perlmutter-e4s-22.05-ci-generate
  #    artifacts: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.05")
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - spack-configs/perlmutter-e4s-22.05/ci/spack.yaml
      allow_failure: true
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-22.05-ci-generate

    strategy: depend

#perlmutter-e4s-22.05:
#  stage: build
#  tags: [perlmutter-e4s]
#  needs: ["perlmutter:check_spack_dependencies"]
#  interruptible: true
#  rules:
#    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.05")
#      allow_failure: true
#    - if: $CI_PIPELINE_SOURCE == "push"
#      changes:
#      - spack-configs/perlmutter-e4s-22.05/ci/spack.yaml
#      allow_failure: true
#  before_script:
#    - *copy_perlmutter_settings
#    - *startup_modules
#  script:
#    - *e4s_22_05_build

muller-e4s-22.05:
  stage: build
  tags: [muller-e4s]
  needs: ["muller:check_spack_dependencies"]
  interruptible: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "MULLER_E4S_22.05")
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - spack-configs/perlmutter-e4s-22.05/ci/spack.yaml
      allow_failure: true
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_22_05_build
  artifacts:
    paths: [$CI_PROJECT_DIR/concretize.log]

perlmutter-e4s-21.11:
  stage: build
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_21.11")
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - spack-configs/perlmutter-e4s-21.11/ci/spack.yaml
      allow_failure: true
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_21_11_build

muller-e4s-21.11:
  stage: build
  tags: [muller-e4s]
  needs: ["muller:check_spack_dependencies"]
  interruptible: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "MULLER_E4S_21.11")
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - spack-configs/perlmutter-e4s-21.11/ci/spack.yaml
      allow_failure: true
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_21_11_build

## PRODUCTION PIPELINES BELOW

approve:
  stage: approve
  tags: [shell]
  needs: ["perlmutter:check_spack_dependencies"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && ($PIPELINE_NAME == "PERLMUTTER_E4S_21.11_DEPLOY" || $PIPELINE_NAME == "CORI_E4S_22.02_DEPLOY" || $PIPELINE_NAME == "PERLMUTTER_E4S_22.05_DEPLOY")
      when: manual
      allow_failure: false
  environment:
    name: production
  script:
    - echo Approval Granted, we will commence execution of production pipeline

perlmutter-e4s-21.11-prod:
  stage: deploy
  tags: [perlmutter-e4s]
  needs: ["perlmutter:check_spack_dependencies", "approve"]
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && $PIPELINE_NAME == "PERLMUTTER_E4S_21.11_DEPLOY"
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
  - bash spack-configs/perlmutter-e4s-21.11/deploy.sh

cori-e4s-22.02-prod:
  stage: deploy
  tags: [cori-e4s]
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && $PIPELINE_NAME == "CORI_E4S_22.02_DEPLOY"
  script:
  - source setup-env.sh
  #- export SPACK_GNUPGHOME=$HOME/.gnupg
  - e4s_root=/global/common/software/spackecp/cori/e4s-22.02
  - spack_root=$e4s_root/spack
  - rm -rf $e4s_root
  - mkdir -p $e4s_root
  - cd $e4s_root
  - git clone $SPACK_REPO --branch e4s-22.02 $spack_root
  - . spack/share/spack/setup-env.sh
  - spack-python --path
  - spack env create e4s $CI_PROJECT_DIR/spack-configs/cori-e4s-22.02/spack.yaml
  - spack env activate e4s
  - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log
  - set +e
  - spack install --show-log-on-error 2>&1
  - spack find
  - spack module tcl refresh --delete-tree -y
  - MODULEPATH=$e4s_root/modules/$(spack arch)
  - module av
  - spack config get compilers > $SPACK_ROOT/etc/spack/compilers.yaml
  - spack config get packages > $SPACK_ROOT/etc/spack/packages.yaml
  - spack config get mirrors > $SPACK_ROOT/etc/spack/mirrors.yaml
  - cp $CI_PROJECT_DIR/spack_site_scope/cori/config.yaml $SPACK_ROOT/etc/spack/config.yaml
  - cp $CI_PROJECT_DIR/spack_site_scope/cori/modules.yaml $SPACK_ROOT/etc/spack/modules.yaml
  - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.sh $SPACK_ROOT/bin/spack-setup.sh
  - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.csh $SPACK_ROOT/bin/spack-setup.csh
  - chmod +x $SPACK_ROOT/bin/spack-setup.sh $SPACK_ROOT/bin/spack-setup.csh

perlmutter-e4s-22.05-prod:
  stage: deploy
  needs: ["perlmutter:check_spack_dependencies", "approve"]
  tags: [perlmutter-e4s]
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && $PIPELINE_NAME == "PERLMUTTER_E4S_22.05_DEPLOY"
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - set +e
    - source setup-env.sh    
    - e4s_root=/global/common/software/spackecp/perlmutter/e4s-22.05/$CI_PIPELINE_ID    
    - mkdir -p $e4s_root
    - cd $e4s_root
    - git clone -b e4s-22.05 $SPACK_REPO
    - . spack/share/spack/setup-env.sh
    - spack-python --path
    - export SPACK_GNUPGHOME=$HOME/.gnupg
    - spack env create e4s $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/spack.yaml
    - spack env activate e4s
    - spack mirror create -d /global/common/software/spackecp/mirrors/source_mirror --all
    - spack install -y --show-log-on-error
    - spack find
    - cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/config.yaml $SPACK_ROOT/etc/spack/config.yaml
    - cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/modules.yaml $SPACK_ROOT/etc/spack/modules.yaml
    - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.sh $SPACK_ROOT/bin/spack-setup.sh
    - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.csh $SPACK_ROOT/bin/spack-setup.csh
    - chmod +x $SPACK_ROOT/bin/spack-setup.sh $SPACK_ROOT/bin/spack-setup.csh
    - cd $e4s_root/..
    - ln -s $e4s_root default 
