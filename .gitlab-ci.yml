variables:
  SPACK_REPO: https://github.com/spack/spack.git
stages:
  - check
  - generate
  - build
  - approve
  - deploy

.copy_muller_settings: &copy_muller_settings
  - mkdir -p /global/common/software/spackecp/muller/spack_settings
  - cp settings/muller/* /global/common/software/spackecp/muller/spack_settings/

.copy_perlmutter_settings: &copy_perlmutter_settings
  - mkdir -p /global/common/software/spackecp/perlmutter/spack_settings
  - cp settings/perlmutter/packages.yaml /global/common/software/spackecp/perlmutter/spack_settings/packages.yaml
  - cp settings/perlmutter/compilers.yaml /global/common/software/spackecp/perlmutter/spack_settings/compilers.yaml

.startup_modules: &startup_modules
  - module reset
  - module use /global/common/software/nersc/$(cat /etc/nersc_modules_rev)/extra_modulefiles
  - module load cpu
  # need to load cray-pmi since its not loaded by default and required for upcxx. See https://software.nersc.gov/NERSC/spack-infrastructure/-/issues/37
  - module load cray-pmi
  - module list

.e4s_23_05_setup: &e4s_23_05_setup
  - set +e
  - source setup-env.sh
  # need to pre-create this directory apparently spack ci doesn't create this automatically
  - mkdir -p /global/common/software/spackecp/mirrors/perlmutter-e4s-23.05/build_cache/_pgp
  - git clone -c feature.manyFiles=true -b e4s-23.05 $SPACK_REPO
  #- pushd spack && git checkout e4s-23.05 && popd
  - . spack/share/spack/setup-env.sh
  - spack --version
  - spack-python --path
  - export SPACK_GNUPGHOME=$HOME/.gnupg

.e4s_22_11_setup: &e4s_22_11_setup
  - set +e
  - source setup-env.sh
  # need to pre-create this directory apparently spack ci doesn't create this automatically
  - mkdir -p /global/common/software/spackecp/mirrors/perlmutter-e4s-22.11/build_cache/_pgp
  - git clone -c feature.manyFiles=true --depth=10 -b e4s-22.11 $SPACK_REPO
  - . spack/share/spack/setup-env.sh
  - spack --version
  - spack-python --path
  - export SPACK_GNUPGHOME=$HOME/.gnupg
  #- spack find
  #- spack env view regenerate

.e4s_22_05_setup: &e4s_22_05_setup
  - set +e
  - source setup-env.sh
  # need to pre-create this directory apparently spack ci doesn't create this automatically
  - mkdir -p /global/common/software/spackecp/mirrors/perlmutter-e4s-22.05/build_cache/_pgp
  - git clone --depth=10 -b e4s-22.05 $SPACK_REPO
  - . spack/share/spack/setup-env.sh
  - spack --version
  - spack-python --path
  - export SPACK_GNUPGHOME=$HOME/.gnupg


.e4s_21_11_build: &e4s_21_11_build
  - set +e
  - source setup-env.sh
  - git clone -b e4s-21.11 $SPACK_REPO
  - cd spack
  #- git config user.name "e4s"
  #- git config user.email "e4s@nersc.gov"
  ## Add NVHPC 21.11 PR: https://github.com/spack/spack/pull/27910
  #- git cherry-pick 5d6a9a7
  - . share/spack/setup-env.sh
  - spack-python --path
  - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-21.11/ci
  - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-21.11/definitions.yaml >> spack.yaml
  - spack env activate -d .
  - spack install
  #- srun -A m3503_g -C gpu --reservation=spack_e4s -q regular -G 2 -t 12:00:00 -N 2 -n 64 spack install -y --show-log-on-error
  - spack find


perlmutter:check_spack_dependencies:
  stage: check
  tags: [perlmutter-e4s]
  allow_failure: false
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "schedule")
  when: always
  script:
    - export
    - bash check_spack_dependencies.sh

muller:check_spack_dependencies:
  stage: check
  tags: [muller-e4s]
  allow_failure: false
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "schedule")
  when: always
  script:
    - bash check_spack_dependencies.sh

spack_training_check:
  stage: build
  tags: [perlmutter-e4s]
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "SPACK_TRAINING")
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - docs/spack_training.rst
  script:
    - cd $CI_PROJECT_DIR
    - source setup-env.sh
    - git clone -b e4s-22.05 https://github.com/spack/spack.git
    - source spack/share/spack/setup-env.sh
    - spack --version
    - echo $SPACK_PYTHON
    - spack-python --path
    - spack env create data_viz $CI_PROJECT_DIR/docs/spack.yaml
    - spack env activate data_viz
    - spack env st
    - spack compiler list
    - spack providers
    - spack providers mpi
    - spack concretize
    - set +e
    - spack install
    - set -e
    - spack find
    - spack mirror create -d $CI_PROJECT_DIR/spack_mirror -a
    - ls -l $CI_PROJECT_DIR/spack_mirror/*
    - spack -d module tcl refresh --delete-tree -y
    - ls -l $HOME/spack-infrastructure/modules/$(spack arch)/*
    - module use $HOME/spack-infrastructure/modules/$(spack arch)
    - ml av

perlmutter-spack-develop-ci-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  rules:
  - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_SPACK_DEVELOP")
    allow_failure: true
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    changes:
    - spack-configs/perlmutter-spack-develop/spack.yaml
    allow_failure: true
  before_script:
  - *copy_perlmutter_settings
  - *startup_modules
  script:
  - export PERLMUTTER_SPACK_BUILDCACHE=/global/common/software/spackecp/mirrors/perlmutter-spack-develop/
  - source setup-env.sh
  - git clone --depth=10 $SPACK_REPO
  - . spack/share/spack/setup-env.sh
  - export SPACK_GNUPGHOME=$HOME/.gnupg
  - cd $CI_PROJECT_DIR/spack-configs/perlmutter-spack-develop
  - spack env activate --without-view .
  - spack ci generate --check-index-only --buildcache-destination "${PERLMUTTER_SPACK_BUILDCACHE}" --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-spack-develop-ci-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-spack-develop-ci-generate"]
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_SPACK_DEVELOP")
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - spack-configs/perlmutter-spack-develop/spack.yaml
      allow_failure: true
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-spack-develop-ci-generate
    strategy: depend


# ----------- E4S 23.05 ------------ #


perlmutter-e4s-23.05-cce-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-23.05/cce/spack.yaml
      - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_23_05_setup 
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/cce
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts: 
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-e4s-23.05-gcc-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-23.05/gcc/spack.yaml
      - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_23_05_setup 
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/gcc
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts: 
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-e4s-23.05-nvhpc-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-23.05/nvhpc/spack.yaml
      - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_23_05_setup 
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/nvhpc
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts: 
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-e4s-23.05-cuda-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-23.05/cuda/spack.yaml
      - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_23_05_setup 
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/cuda
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts: 
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-e4s-23.05-mathlibs-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-23.05/math-libs/spack.yaml
      - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_23_05_setup 
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/math-libs
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts: 
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-e4s-23.05-data-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-23.05/data/spack.yaml
      - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_23_05_setup 
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/data
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts: 
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-e4s-23.05-gcc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-gcc-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-23.05/gcc/spack.yaml
      - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-gcc-generate
    strategy: depend

perlmutter-e4s-23.05-cce-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-cce-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-23.05/cce/spack.yaml
      - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-cce-generate
    strategy: depend
perlmutter-e4s-23.05-nvhpc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-nvhpc-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-23.05/nvhpc/spack.yaml 
      - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-nvhpc-generate
    strategy: depend
perlmutter-e4s-23.05-cuda-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-cuda-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-23.05/cuda/spack.yaml
      - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-cuda-generate
    strategy: depend
    
perlmutter-e4s-23.05-mathlibs-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-mathlibs-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
        - spack-configs/perlmutter-e4s-23.05/math-libs/spack.yaml
        - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-mathlibs-generate
    strategy: depend


perlmutter-e4s-23.05-data-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-data-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-23.05/data/spack.yaml
      - spack-configs/perlmutter-e4s-23.05/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-data-generate
    strategy: depend
# ----------- E4S 22.11 ------------ #
perlmutter-e4s-22.11-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.11")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-22.11/gcc/spack.yaml
      - spack-configs/perlmutter-e4s-22.11/cce/spack.yaml
      - spack-configs/perlmutter-e4s-22.11/cuda/spack.yaml
      - spack-configs/perlmutter-e4s-22.11/nvhpc/spack.yaml
      - spack-configs/perlmutter-e4s-22.11/definitions.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_22_11_setup    
    # gcc
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/gcc
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/gcc-pipeline.yml"

    # cce
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/cce
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/cce-pipeline.yml"

    # cuda
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/cuda
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log        
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/cuda-pipeline.yml"

    # nvhpc
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/nvhpc
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/nvhpc-pipeline.yml"
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-e4s-22.11-gcc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.11-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.11")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-22.11/gcc/spack.yaml 
      - spack-configs/perlmutter-e4s-22.11/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/gcc-pipeline.yml
        job: perlmutter-e4s-22.11-generate
    strategy: depend

perlmutter-e4s-22.11-nvhpc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.11-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.11")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-22.11/nvhpc/spack.yaml 
      - spack-configs/perlmutter-e4s-22.11/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/nvhpc-pipeline.yml
        job: perlmutter-e4s-22.11-generate
    strategy: depend


perlmutter-e4s-22.11-cuda-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.11-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.11")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-22.11/cuda/spack.yaml 
      - spack-configs/perlmutter-e4s-22.11/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/cuda-pipeline.yml
        job: perlmutter-e4s-22.11-generate
    strategy: depend


perlmutter-e4s-22.11-cce-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.11-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.11")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push")
      changes:
      - spack-configs/perlmutter-e4s-22.11/cce/spack.yaml 
      - spack-configs/perlmutter-e4s-22.11/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/cce-pipeline.yml
        job: perlmutter-e4s-22.11-generate
    strategy: depend

# ----------- E4S 22.05 ------------ #
perlmutter-e4s-22.05-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.05")
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - spack-configs/perlmutter-e4s-22.05/cce/spack.yaml
      - spack-configs/perlmutter-e4s-22.05/gcc/spack.yaml
      - spack-configs/perlmutter-e4s-22.05/cuda/spack.yaml
      - spack-configs/perlmutter-e4s-22.05/nvhpc/spack.yaml
      - spack-configs/perlmutter-e4s-22.05/definitions.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_22_05_setup
    # cce    
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/cce
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/definitions.yaml >> spack.yaml
    - spack env activate --without-view .
    - spack env st
    - spack concretize -f | tee $CI_PROJECT_DIR/cce-concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/cce-pipeline.yml"

    # cuda    
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/cuda
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/definitions.yaml >> spack.yaml
    - spack env activate --without-view .
    - spack env st
    - spack concretize -f | tee $CI_PROJECT_DIR/cuda-concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/cuda-pipeline.yml"

    # gcc   
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/gcc
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/definitions.yaml >> spack.yaml
    - spack env activate --without-view .
    - spack env st
    - spack concretize -f | tee $CI_PROJECT_DIR/gcc-concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/gcc-pipeline.yml"

    # nvhpc   
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/nvhpc
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/definitions.yaml >> spack.yaml
    - spack env activate --without-view .
    - spack env st
    - spack concretize -f | tee $CI_PROJECT_DIR/nvhpc-concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/nvhpc-pipeline.yml"
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-e4s-22.05-cce-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.05-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.05")
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - spack-configs/perlmutter-e4s-22.05/cce/spack.yaml
      - spack-configs/perlmutter-e4s-22.05/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/cce-pipeline.yml
        job: perlmutter-e4s-22.05-generate
    strategy: depend

perlmutter-e4s-22.05-gcc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.05-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.05")
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - spack-configs/perlmutter-e4s-22.05/gcc/spack.yaml
      - spack-configs/perlmutter-e4s-22.05/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/gcc-pipeline.yml
        job: perlmutter-e4s-22.05-generate
    strategy: depend

perlmutter-e4s-22.05-nvhpc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.05-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.05")
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - spack-configs/perlmutter-e4s-22.05/nvhpc/spack.yaml
      - spack-configs/perlmutter-e4s-22.05/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/nvhpc-pipeline.yml
        job: perlmutter-e4s-22.05-generate
    strategy: depend

perlmutter-e4s-22.05-cuda-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.05-generate"]
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.05")
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - spack-configs/perlmutter-e4s-22.05/cuda/spack.yaml
      - spack-configs/perlmutter-e4s-22.05/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/cuda-pipeline.yml
        job: perlmutter-e4s-22.05-generate
    strategy: depend

muller-e4s-22.05:
  stage: build
  tags: [muller-e4s]
  needs: ["muller:check_spack_dependencies"]
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "MULLER_E4S_22.05")
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - spack-configs/perlmutter-e4s-22.05/ci/spack.yaml
  before_script:
    - *copy_muller_settings
    - *startup_modules
  script:
    - *e4s_22_05_setup
  artifacts:
    paths: [$CI_PROJECT_DIR/concretize.log]

perlmutter-e4s-21.11:
  stage: build
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_21.11")
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - spack-configs/perlmutter-e4s-21.11/ci/spack.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *e4s_21_11_build

muller-e4s-21.11:
  stage: build
  tags: [muller-e4s]
  needs: ["muller:check_spack_dependencies"]
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "MULLER_E4S_21.11")
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - spack-configs/perlmutter-e4s-21.11/ci/spack.yaml
  before_script:
    - *copy_muller_settings
    - *startup_modules
  script:
    - *e4s_21_11_build

## PRODUCTION PIPELINES BELOW

approve:
  stage: approve
  tags: [shell]
  needs: ["perlmutter:check_spack_dependencies"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && ($PIPELINE_NAME == "PERLMUTTER_E4S_21.11_DEPLOY" || $PIPELINE_NAME == "CORI_E4S_22.02_DEPLOY" || $PIPELINE_NAME == "PERLMUTTER_E4S_22.05_DEPLOY" || $PIPELINE_NAME == "PERLMUTTER_E4S_22.11_DEPLOY")
      when: manual
      allow_failure: false
  environment:
    name: production
  script:
    - echo Approval Granted, we will commence execution of production pipeline

perlmutter-e4s-21.11-prod:
  stage: deploy
  tags: [perlmutter-e4s]
  needs: ["perlmutter:check_spack_dependencies", "approve"]
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && $PIPELINE_NAME == "PERLMUTTER_E4S_21.11_DEPLOY"
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - printf "\nRunning Perlmutter E4S 21.11 Deployment\n"
    - echo CI_PIPELINE_ID = ${CI_PIPELINE_ID}
    - echo CI_PROJECT_DIR = ${CI_PROJECT_DIR}
    - source setup-env.sh
    - E4S_ROOT=/global/common/software/spackecp/perlmutter/e4s-21.11/${CI_PIPELINE_ID}
    - SPACK_ROOT=${E4S_ROOT}/spack
    - mkdir -p ${E4S_ROOT}
    - cd ${E4S_ROOT}
    - git clone https://github.com/spack/spack.git -b e4s-21.11 ${SPACK_ROOT}
    - . spack/share/spack/setup-env.sh
    - export SPACK_PYTHON=$(which python)
    - cd ${SPACK_ROOT}
    - spack --version
    - spack-python --path
    - cat ${CI_PROJECT_DIR}/spack-configs/perlmutter-e4s-21.11/definitions.yaml >> ${CI_PROJECT_DIR}/spack-configs/perlmutter-e4s-21.11/prod/spack.yaml
    - spack env create e4s ${CI_PROJECT_DIR}/spack-configs/perlmutter-e4s-21.11/prod/spack.yaml
    - spack env activate e4s
    - spack env st
    - spack install -y --show-log-on-error
    - spack find
    - spack config get compilers > $SPACK_ROOT/etc/spack/compilers.yaml
    - spack config get packages > $SPACK_ROOT/etc/spack/packages.yaml
    - spack config get mirrors > $SPACK_ROOT/etc/spack/mirrors.yaml
    - cp ${CI_PROJECT_DIR}/spack_site_scope/perlmutter/config.yaml            ${SPACK_ROOT}/etc/spack/config.yaml
    - cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/modules.yaml $SPACK_ROOT/etc/spack/modules.yaml
    - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.sh $SPACK_ROOT/bin/spack-setup.sh
    - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.csh $SPACK_ROOT/bin/spack-setup.csh

perlmutter-e4s-22.05-prod:
  stage: deploy
  needs: ["perlmutter:check_spack_dependencies", "approve"]
  tags: [perlmutter-e4s]
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && $PIPELINE_NAME == "PERLMUTTER_E4S_22.05_DEPLOY"
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - set +e
    - source setup-env.sh
    - e4s_root=/global/common/software/spackecp/perlmutter/e4s-22.05/$CI_PIPELINE_ID
    - mkdir -p $e4s_root
    - cd $e4s_root
    - git clone -b e4s-22.05 $SPACK_REPO
    - . spack/share/spack/setup-env.sh
    - spack-python --path
    - export SPACK_GNUPGHOME=$HOME/.gnupg
    
    # add definitions to production spack.yamls
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/prod/gcc/spack.yaml
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/prod/cuda/spack.yaml
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/prod/cce/spack.yaml
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/prod/nvhpc/spack.yaml
    
    # gcc deployment
    - stack="gcc"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error
    - spack find
    - spack env deactivate

    # cce deployment
    - stack="cce"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error
    - spack find
    - spack env deactivate

    # nvhpc deployment
    - stack="nvhpc"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error
    - spack find
    - spack env deactivate

    # cuda deployment
    - stack="cuda"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.05/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error
    - spack find
    - spack env deactivate
    
    - cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/config.yaml $SPACK_ROOT/etc/spack/config.yaml
    - cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/modules.yaml $SPACK_ROOT/etc/spack/modules.yaml
    - spack -e gcc config get mirrors > $SPACK_ROOT/etc/spack/mirrors.yaml
    - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.sh $SPACK_ROOT/bin/spack-setup.sh
    - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.csh $SPACK_ROOT/bin/spack-setup.csh
    - chmod +x $SPACK_ROOT/bin/spack-setup.sh $SPACK_ROOT/bin/spack-setup.csh

perlmutter-e4s-22.11-prod:
  stage: deploy
  needs: ["perlmutter:check_spack_dependencies", "approve"]
  tags: [perlmutter-e4s]
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && $PIPELINE_NAME == "PERLMUTTER_E4S_22.11_DEPLOY"
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - set +e
    - source setup-env.sh
    - e4s_root=/global/common/software/spackecp/perlmutter/e4s-22.11/$CI_PIPELINE_ID
    - mkdir -p $e4s_root
    - cd $e4s_root
    - git clone -c feature.manyFiles=true -b e4s-22.11 $SPACK_REPO
    - . spack/share/spack/setup-env.sh
    - spack-python --path
    - export SPACK_GNUPGHOME=$HOME/.gnupg
    
    # add definitions to production spack.yamls
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/gcc/spack.yaml
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/cuda/spack.yaml
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/cce/spack.yaml
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/nvhpc/spack.yaml
    
    # gcc deployment
    - stack="gcc"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    # cce deployment
    - stack="cce"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    # nvhpc deployment
    - stack="nvhpc"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    # cuda deployment
    - stack="cuda"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    - cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/config.yaml $SPACK_ROOT/etc/spack/config.yaml
    - cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/modules.yaml $SPACK_ROOT/etc/spack/modules.yaml
    - spack -e gcc config get mirrors > $SPACK_ROOT/etc/spack/mirrors.yaml
    - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.sh $SPACK_ROOT/bin/spack-setup.sh
    - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.csh $SPACK_ROOT/bin/spack-setup.csh
    - chmod +x $SPACK_ROOT/bin/spack-setup.sh $SPACK_ROOT/bin/spack-setup.csh
